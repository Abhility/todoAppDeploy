{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","helpers/httpClient.js","helpers/utils.js","components/TodoApp.js","App.js","index.js"],"names":["TodoItem","props","data","deleteItem","alterItem","className","style","textDecoration","done","name","textAsButton","displayText","background","rate","text","lang","date","loading","src","alt","height","width","margin","onClick","bind","id","TodoList","todos","todoList","map","todo","key","sendRequest","url","method","body","a","fetch","JSON","stringify","headers","response","ok","Error","json","window","M","toast","html","classes","displayLength","changeStyles","targetRef","targetEvent","current","childNodes","forEach","child","index","classList","remove","currentElement","target","add","TodoApp","useSpeechRecognition","transcript","resetTranscript","listening","useState","setTodos","prevTodos","setprevTodos","setLoading","item","setItem","API_URL","filterRef","useRef","sortRef","supportsSpeechRecognition","SpeechRecognition","browserSupportsSpeechRecognition","fetchData","showLoader","httpRequest","reverse","toLowerCase","Date","toLocaleString","weekday","year","month","day","hour","minute","Array","isArray","console","log","addTodo","event","preventDefault","now","newTodos","find","useEffect","listen","start","startListening","stopListening","onSubmit","type","value","placeholder","onChange","required","ref","sortedTodos","sort","first","second","filteredTodos","filter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d21714b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Speech from 'react-speech';\r\n\r\nconst TodoItem = (props) => {\r\n  const { data, deleteItem, alterItem } = props;\r\n  return (\r\n    <li className=\"collection-item hoverable todo-item\">\r\n      <div className=\"todo\">\r\n        <section>\r\n          <h5 style={{ textDecoration: data.done ? 'line-through' : 'none' }}>\r\n            {data.name}\r\n            <Speech\r\n              textAsButton={true}\r\n              displayText={\r\n                <i className=\"material-icons teal-text\">volume_up</i>\r\n              }\r\n              className=\"chip\"\r\n              style={{ background: 'transparent' }}\r\n              rate=\"1.3\"\r\n              text={data.name}\r\n              lang=\"EN-US\"\r\n            />\r\n          </h5>\r\n          <p className=\"grey-text chip todo-date\">\r\n            <span className=\"teal-text\">Added On : </span>\r\n            {data.date}\r\n          </p>\r\n        </section>\r\n        <section className=\"todo-actions\">\r\n          {data.loading ? (\r\n            <img\r\n              src=\"../loader.gif\"\r\n              alt=\"loading...\"\r\n              height=\"50px\"\r\n              width=\"50px\"\r\n            />\r\n          ) : (\r\n            <>\r\n              {data.done ? (\r\n                <a\r\n                  className=\"secondary-content waves-effect\"\r\n                  style={{ margin: '0px 20px' }}\r\n                  onClick={alterItem.bind(null, data.id)}\r\n                >\r\n                  <i className=\"material-icons red-text\">clear</i>\r\n                </a>\r\n              ) : (\r\n                <a\r\n                  className=\"secondary-content waves-effect\"\r\n                  style={{ margin: '0px 20px' }}\r\n                  onClick={alterItem.bind(null, data.id)}\r\n                >\r\n                  <i className=\"material-icons teal-text\">done</i>\r\n                </a>\r\n              )}\r\n              <a\r\n                className=\"secondary-content waves-effect\"\r\n                onClick={deleteItem.bind(null, data.id)}\r\n              >\r\n                <i className=\"material-icons red-text\">delete</i>\r\n              </a>\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList = (props) => {\r\n  const { todos, deleteItem, alterItem, loading } = props;\r\n  const todoList = todos.map((todo) => (\r\n    <TodoItem\r\n      key={todo.id}\r\n      data={todo}\r\n      deleteItem={deleteItem}\r\n      alterItem={alterItem}\r\n    ></TodoItem>\r\n  ));\r\n\r\n  return (\r\n    <ul className=\"collection\">\r\n      {loading && (\r\n        <li className=\"collection-item loader\">\r\n          <img\r\n            src=\"../spin.gif\"\r\n            alt=\"loading...\"\r\n            height=\"100px\"\r\n            width=\"100px\"\r\n          />\r\n        </li>\r\n      )}\r\n      {todoList}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","const sendRequest = async (url, method, body) => {\r\n  try {\r\n    const response = await fetch(url, {\r\n      method,\r\n      body: body && JSON.stringify(body),\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    });\r\n    if (!response.ok) throw Error();\r\n    return await response.json();\r\n  } catch (err) {\r\n    window.M.toast({\r\n      html:\r\n        '<h6>Cannot connect to server!. Please check your internet connection</h6>',\r\n      classes: 'red dark-3 white-text',\r\n      displayLength: 2000,\r\n    });\r\n  }\r\n};\r\n\r\nexport default sendRequest;\r\n","const changeStyles = (targetRef, targetEvent) => {\r\n  targetRef.current.childNodes.forEach((child, index) => {\r\n    if (index > 0) {\r\n      child.classList.remove('teal');\r\n      child.classList.remove('white-text');\r\n      child.classList.remove('z-depth-3');\r\n    }\r\n  });\r\n  if (targetEvent) {\r\n    const { target: currentElement } = targetEvent;\r\n    currentElement.classList.add('teal');\r\n    currentElement.classList.add('white-text');\r\n    currentElement.classList.add('z-depth-3');\r\n  }\r\n};\r\n\r\nexport default changeStyles;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport TodoList from './TodoList';\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from 'react-speech-recognition';\r\n\r\nimport httpRequest from '../helpers/httpClient';\r\nimport changeStyles from '../helpers/utils';\r\n\r\nconst TodoApp = () => {\r\n  const { transcript, resetTranscript, listening } = useSpeechRecognition('');\r\n  const [todos, setTodos] = useState([]);\r\n  const [prevTodos, setprevTodos] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [item, setItem] = useState('');\r\n  const API_URL = 'https://abhility-fakedb.glitch.me/todos';\r\n  const filterRef = useRef(null);\r\n  const sortRef = useRef(null);\r\n\r\n  const supportsSpeechRecognition = SpeechRecognition.browserSupportsSpeechRecognition();\r\n\r\n  const fetchData = async (showLoader) => {\r\n    setLoading(showLoader);\r\n    try {\r\n      let data = await httpRequest(API_URL, 'GET', null);\r\n      data = data.reverse().map((item) => {\r\n        return {\r\n          ...item,\r\n          loading: false,\r\n          name: item.name.toLowerCase(),\r\n          date: new Date(item.date).toLocaleString('en-US', {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n          }),\r\n        };\r\n      });\r\n      if (Array.isArray(data)) {\r\n        setTodos(data);\r\n        setprevTodos(data);\r\n        changeStyles(filterRef, null);\r\n        changeStyles(sortRef, null);\r\n      }\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setLoading(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    setItem(value);\r\n  };\r\n\r\n  const addTodo = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    const todo = {\r\n      name: item,\r\n      date: Date.now(),\r\n      done: false,\r\n    };\r\n    setItem('');\r\n    try {\r\n      await httpRequest(API_URL, 'POST', todo);\r\n      await fetchData(false);\r\n      window.M.toast({\r\n        html: '<h6>Todo item added!</h6>',\r\n        classes: 'green accent-4 white-text',\r\n        displayLength: 1500,\r\n      });\r\n    } catch (err) {\r\n      setLoading(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleteItem = async (id) => {\r\n    let newTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.loading = true;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(newTodos);\r\n    try {\r\n      await httpRequest(`${API_URL}/${id}`, 'DELETE', null);\r\n      await fetchData(false);\r\n      window.M.toast({\r\n        html: '<h6>Todo item deleted!</h6>',\r\n        classes: 'red accent-4 white-text',\r\n        displayLength: 1500,\r\n      });\r\n    } catch (err) {\r\n      setLoading(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const alterItem = async (id) => {\r\n    let newTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.loading = true;\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    let todo = todos.find((todo) => todo.id === id);\r\n    todo = { ...todo, done: !todo.done };\r\n    setTodos(newTodos);\r\n    try {\r\n      await httpRequest(`${API_URL}/${id}`, 'PUT', todo);\r\n      await fetchData(false);\r\n      todo.done\r\n        ? window.M.toast({\r\n            html: '<h6>Marked as completed!</h6>',\r\n            classes: 'teal accent-4 white-text',\r\n            displayLength: 1500,\r\n          })\r\n        : window.M.toast({\r\n            html: '<h6>Marked as Inprogress!</h6>',\r\n            classes: 'teal accent-4 white-text',\r\n            displayLength: 1500,\r\n          });\r\n    } catch (err) {\r\n      setLoading(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(true);\r\n  }, []);\r\n\r\n  const alphabeticSort = (event) => {\r\n    changeStyles(sortRef, event);\r\n    const sortedTodos = todos.sort((first, second) =>\r\n      first.name < second.name ? -1 : first.name > second.name ? 1 : 0\r\n    );\r\n    setTodos((prevTodos) => [...sortedTodos]);\r\n  };\r\n\r\n  const addedDateSort = (event) => {\r\n    changeStyles(sortRef, event);\r\n    const sortedTodos = todos.sort((first, second) =>\r\n      first.date > second.date ? -1 : first.date < second.date ? 1 : 0\r\n    );\r\n    setTodos((prevTodos) => [...sortedTodos]);\r\n  };\r\n\r\n  const filterByComplete = (event) => {\r\n    changeStyles(filterRef, event);\r\n    const filteredTodos = prevTodos.filter((todo) => todo.done);\r\n    setTodos((prevTodos) => [...filteredTodos]);\r\n  };\r\n\r\n  const filterByInprogress = (event) => {\r\n    changeStyles(filterRef, event);\r\n    const filteredTodos = prevTodos.filter((todo) => !todo.done);\r\n    setTodos((prevTodos) => [...filteredTodos]);\r\n  };\r\n\r\n  const showAll = (event) => {\r\n    changeStyles(filterRef, event);\r\n    setTodos(prevTodos);\r\n  };\r\n\r\n  const listen = (start) => {\r\n    resetTranscript('');\r\n    if (start) {\r\n      window.M.toast({\r\n        html: '<h6>This feature is still in beta testing phase</h6>',\r\n        classes: 'black accent-4 white-text',\r\n        displayLength: 2500,\r\n      });\r\n      SpeechRecognition.startListening();\r\n    } else {\r\n      SpeechRecognition.stopListening();\r\n    }\r\n    setItem(transcript);\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: '25px auto' }}>\r\n      <form className=\"container row\" onSubmit={addTodo}>\r\n        <div className=\"input-field col s12 l8 m8\">\r\n          <input\r\n            id=\"input\"\r\n            type=\"text\"\r\n            name=\"item\"\r\n            value={item}\r\n            placeholder=\"Type your todo here...\"\r\n            onChange={handleChange}\r\n            className=\"validate\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-field col s6 l2 m2\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn-floating btn-large waves-effect waves-light hoverable\"\r\n          >\r\n            <i className=\"material-icons\">edit</i>\r\n          </button>\r\n        </div>\r\n        {supportsSpeechRecognition && (\r\n          <div className=\"input-field col s6 l2 m2\">\r\n            {listening ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-floating btn-large waves-effect waves-light hoverable red pulse\"\r\n                onClick={listen.bind(null, false)}\r\n              >\r\n                <i className=\"material-icons\">stop</i>\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-floating btn-large waves-effect waves-light hoverable teal\"\r\n                onClick={listen.bind(null, true)}\r\n              >\r\n                <i className=\"material-icons\">mic</i>\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </form>\r\n      {listening && (\r\n        <div className=\"container row\">\r\n          <h6 className=\"col s12 l12 m12 teal-text\">Listening...</h6>\r\n        </div>\r\n      )}\r\n      <div className=\"actions container row\" ref={sortRef}>\r\n        <span className=\"chip col s8 l2 orange white-text action-label z-depth-3\">\r\n          <i className=\"material-icons\">sort</i>\r\n          Sort By\r\n        </span>\r\n        <span className=\"col s0 l4\" />\r\n        <span className=\"chip col s8 l2 action-button\" onClick={alphabeticSort}>\r\n          Alphabetically\r\n        </span>\r\n        <span className=\"col s0 l2\" />\r\n        <span className=\"chip col s8 l2 action-button\" onClick={addedDateSort}>\r\n          Added Date\r\n        </span>\r\n      </div>\r\n      <div className=\"actions container row\" ref={filterRef}>\r\n        <span className=\"chip col s8 l2 green white-text action-label z-depth-3\">\r\n          <i className=\"material-icons\">photo_filter</i>\r\n          Filter By\r\n        </span>\r\n        <span className=\"col s0 l2\" />\r\n        <span\r\n          className=\"chip col s8 l2 action-button\"\r\n          onClick={filterByComplete}\r\n        >\r\n          Completed\r\n        </span>\r\n        <span\r\n          className=\"chip col s8 l2 action-button\"\r\n          onClick={filterByInprogress}\r\n        >\r\n          Inprogress\r\n        </span>\r\n        <span className=\"chip col s8 l2 action-button\" onClick={showAll}>\r\n          All\r\n        </span>\r\n      </div>\r\n      <div className=\"container row\">\r\n        <TodoList\r\n          todos={todos}\r\n          deleteItem={deleteItem}\r\n          alterItem={alterItem}\r\n          loading={loading}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","import React from 'react';\r\nimport TodoApp from './components/TodoApp';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\" container header\">\r\n      <h2 className=\"container teal-text\">TodoList App</h2>\r\n      <TodoApp />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}